{"version":3,"sources":["User.js","store.js","Comment.js","CommentsList.js","Post.js","PostList.js","api.js","App.js","index.js"],"names":["User","_ref","user","react_default","a","createElement","className","name","address","city","email","store","createStore","state","action","type","Object","objectSpread2","allPosts","visiblePosts","filter","post","id","postId","map","comments","c","commentId","isLoading","loadingButton","mapDispatchToProps","deleteComment","connect","comment","onClick","body","CommentsList","singleComment","src_Comment","deletePost","title","src_User","src_CommentsList","posts","postData","src_Post","getPosts","response","regenerator_default","async","_context","prev","next","awrap","fetch","sent","abrupt","json","stop","getComments","_context2","getUsers","_context3","setPosts","startLoading","finishLoading","hideLoadingButton","setVisiblePosts","countPosts","length","_useState","useState","_useState2","slicedToArray","inputValue","setInputValue","planFilterPosts","useCallback","f","delay","timerId","clearTimeout","_len","arguments","args","Array","_key","setTimeout","apply","concat","debounce","value","includes","_ref2","_ref3","users","postsWithUsersAndComments","Promise","all","find","userId","onChange","e","target","src_PostList","ReactDOM","render","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.f4dac3ab.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst User = ({ user }) => (\n  <div className=\"post__author author\">\n    <p>\n      Post by:\n      {' '}\n      {user.name}\n      {' '}\n      from\n      {' '}\n      {user.address.city}\n    </p>\n    <p>{user.email}</p>\n  </div>\n);\n\nUser.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string,\n    address: PropTypes.object,\n    email: PropTypes.string,\n  }).isRequired,\n};\n\nexport default User;\n","import { createStore } from 'redux';\n\n// Action Types\nconst ACTION_TYPE_SET_POSTS = 'SET_POSTS';\nconst ACTION_TYPE_SET_VISIBLE_POSTS = 'SET_VISIBLE_POSTS';\nconst ACTION_TYPE_DELETE_POST = 'DELETE_POST';\nconst ACTION_TYPE_DELETE_COMMENT = 'DELETE_COMMENT';\n\nconst ACTION_TYPE_START_LOADING = 'START_LOADING';\nconst ACTION_TYPE_FINISH_LOADING = 'FINISH_LOADING';\nconst ACTION_TYPE_LOADING_BUTTON_IS_OFF = 'LOADING_BUTTON_IS_OFF';\n\n// Action Creators\nexport const setPosts = allPosts => ({\n  type: ACTION_TYPE_SET_POSTS,\n  allPosts,\n});\n\nexport const setVisiblePosts = visiblePosts => ({\n  type: ACTION_TYPE_SET_VISIBLE_POSTS,\n  visiblePosts,\n});\n\nexport const deletePost = postId => ({\n  type: ACTION_TYPE_DELETE_POST,\n  postId,\n});\n\nexport const deleteComment = (commentId, postId) => ({\n  type: ACTION_TYPE_DELETE_COMMENT,\n  commentId,\n  postId,\n});\n\nexport const startLoading = () => ({\n  type: ACTION_TYPE_START_LOADING,\n});\n\nexport const finishLoading = () => ({\n  type: ACTION_TYPE_FINISH_LOADING,\n});\n\nexport const hideLoadingButton = () => ({\n  type: ACTION_TYPE_LOADING_BUTTON_IS_OFF,\n});\n\n// Reducer\nconst rootReducer = (state, action) => {\n  switch (action.type) {\n    case ACTION_TYPE_SET_POSTS:\n      return {\n        ...state,\n        allPosts: action.allPosts,\n      };\n    case ACTION_TYPE_SET_VISIBLE_POSTS:\n      return {\n        ...state,\n        visiblePosts: action.visiblePosts,\n      };\n    case ACTION_TYPE_DELETE_POST:\n      return {\n        ...state,\n        visiblePosts: state.visiblePosts\n          .filter(post => post.id !== action.postId),\n        allPosts: state.allPosts\n          .filter(post => post.id !== action.postId),\n      };\n    case ACTION_TYPE_DELETE_COMMENT:\n      return {\n        ...state,\n        visiblePosts: state.visiblePosts.map((post) => {\n          if (post.id === action.postId) {\n            post.comments = post.comments\n              .filter(c => c.id !== action.commentId);\n          }\n\n          return {\n            ...post,\n            comments: post.comments,\n          };\n        }),\n        allPosts: state.allPosts.map((post) => {\n          if (post.id === action.postId) {\n            post.comments = post.comments\n              .filter(c => c.id !== action.commentId);\n          }\n\n          return {\n            ...post,\n            comments: post.comments,\n          };\n        }),\n      };\n    case ACTION_TYPE_START_LOADING:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case ACTION_TYPE_FINISH_LOADING:\n      return {\n        ...state,\n        isLoading: false,\n      };\n    case ACTION_TYPE_LOADING_BUTTON_IS_OFF:\n      return {\n        ...state,\n        loadingButton: false,\n      };\n    default:\n      return state;\n  }\n};\n\nconst initialState = {\n  allPosts: [],\n  visiblePosts: [],\n  isLoading: false,\n  loadingButton: true,\n};\n\nconst store = createStore(rootReducer, initialState);\n\nexport default store;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as actionCreators from './store';\n\n// eslint-disable-next-line no-shadow\nconst Comment = ({ comment, deleteComment }) => (\n  <div className=\"comments__item\">\n    <li className=\"comments__name\">\n      {comment.name}\n      <span>\n        <button\n          type=\"button\"\n          className=\"post__button\"\n          onClick={() => deleteComment(comment.id, comment.postId)}\n        >\n          X\n        </button>\n      </span>\n    </li>\n    <p className=\"comments__email\">\n      By\n      {' '}\n      {comment.email}\n    </p>\n    <p className=\"comments__text\">{comment.body}</p>\n  </div>\n);\n\nconst mapDispatchToProps = {\n  deleteComment: actionCreators.deleteComment,\n};\n\nexport default connect(null, mapDispatchToProps)(Comment);\n\nComment.propTypes = {\n  comment: PropTypes.shape({\n    name: PropTypes.string,\n    email: PropTypes.string,\n    body: PropTypes.string,\n    id: PropTypes.number,\n    postId: PropTypes.number,\n  }).isRequired,\n  deleteComment: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// eslint-disable-next-line no-shadow\nimport Comment from './Comment';\n\nconst CommentsList = ({ comments }) => (\n  <div className=\"post__comments comments\">\n    <p>Comments:</p>\n    <ul className=\"comments__list\">\n      {comments.map(singleComment => <Comment comment={singleComment} />)}\n    </ul>\n  </div>\n);\n\nexport default CommentsList;\n\n// eslint-disable-next-line max-len\nCommentsList.propTypes = { comments: PropTypes.arrayOf(PropTypes.object).isRequired };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport User from './User';\nimport CommentsList from './CommentsList';\nimport * as actionCreators from './store';\n\nconst Post = ({ post, deletePost }) => (\n  <div className=\"post\">\n    <button\n      type=\"button\"\n      className=\"post__button\"\n      onClick={() => deletePost(post.id)}\n    >\n      X\n    </button>\n    <p className=\"post__title\">{post.title}</p>\n    <p className=\"post__body\">{post.body}</p>\n    <User user={post.user} />\n    <CommentsList comments={post.comments} />\n  </div>\n);\n\nconst mapDispatchToProps = {\n  deletePost: actionCreators.deletePost,\n};\n\nexport default connect(null, mapDispatchToProps)(Post);\n\nPost.propTypes = {\n  post: PropTypes.shape({\n    title: PropTypes.string,\n    body: PropTypes.string,\n    comments: PropTypes.object,\n    user: PropTypes.object,\n    id: PropTypes.number,\n  }).isRequired,\n  deletePost: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Post from './Post';\n\nconst PostList = ({ posts }) => (\n  posts.map(postData => (\n    <Post post={postData} />\n  ))\n);\n\nconst mapStateToProps = state => ({\n  posts: state.visiblePosts,\n});\n\nexport default connect(mapStateToProps)(PostList);\n","const postsURL = 'https://jsonplaceholder.typicode.com/posts';\nconst commentsURL = 'https://jsonplaceholder.typicode.com/comments';\nconst usersURL = 'https://jsonplaceholder.typicode.com/users';\n\nexport const getPosts = async() => {\n  const response = await fetch(postsURL);\n\n  return response.json();\n};\n\nexport const getComments = async() => {\n  const response = await fetch(commentsURL);\n\n  return response.json();\n};\n\nexport const getUsers = async() => {\n  const response = await fetch(usersURL);\n\n  return response.json();\n};\n","import React, { useState, useCallback } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport PostList from './PostList';\nimport './App.css';\nimport { getUsers, getComments, getPosts } from './api';\nimport * as actionCreators from './store';\n\nconst App = ({\n  startLoading,\n  finishLoading,\n  hideLoadingButton,\n  setPosts,\n  isLoading,\n  loadingButton,\n  setVisiblePosts,\n  allPosts,\n  countPosts,\n}) => {\n  const [inputValue, setInputValue] = useState('');\n  const handleLoading = async() => {\n    startLoading();\n\n    const [posts, comments, users] = await Promise.all([\n      getPosts(),\n      getComments(),\n      getUsers(),\n    ]);\n\n    finishLoading();\n    hideLoadingButton();\n\n    const postsWithUsersAndComments = posts.map(post => ({\n      ...post,\n      user: users.find(user => user.id === post.userId),\n      comments: comments.filter(comment => comment.postId === post.id),\n    }));\n\n    setPosts(postsWithUsersAndComments);\n    setVisiblePosts(postsWithUsersAndComments);\n\n    return postsWithUsersAndComments;\n  };\n\n  const debounce = (f, delay) => {\n    let timerId = 0;\n\n    return (...args) => {\n      clearTimeout(timerId);\n      timerId = setTimeout(f, delay, ...args);\n    };\n  };\n\n  const handleInputValue = (e) => {\n    setInputValue(e.target.value);\n    planFilterPosts(e.target.value);\n  };\n\n  const filterPosts = (value) => {\n    setVisiblePosts(allPosts\n      .filter(post => (post.title + post.body).includes(value)));\n  };\n\n  const planFilterPosts = useCallback(\n    debounce(filterPosts, 1000),\n    [allPosts]\n  );\n\n  if (isLoading) {\n    return (\n      <h1 className=\"App\">Loading...</h1>\n    );\n  }\n\n  return loadingButton\n    ? (\n      <div className=\"box\">\n        <button\n          type=\"button\"\n          onClick={handleLoading}\n          className=\"filter__button button\"\n        >\n          Load posts\n        </button>\n      </div>\n    )\n    : (\n      <div className=\"App\">\n        <div className=\"filter\">\n          <h1>\n            Redux List of Posts -\n            {' '}\n            {countPosts}\n          </h1>\n          <input\n            type=\"text\"\n            className=\"filter__input\"\n            value={inputValue}\n            onChange={handleInputValue}\n          />\n        </div>\n        <PostList />\n      </div>\n    );\n};\n\nconst mapStateToProps = state => ({\n  isLoading: state.isLoading,\n  loadingButton: state.loadingButton,\n  allPosts: state.allPosts,\n  countPosts: state.visiblePosts.length,\n});\n\nconst mapDispatchToProps = {\n  setPosts: actionCreators.setPosts,\n  startLoading: actionCreators.startLoading,\n  finishLoading: actionCreators.finishLoading,\n  hideLoadingButton: actionCreators.hideLoadingButton,\n  setVisiblePosts: actionCreators.setVisiblePosts,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\nApp.propTypes = {\n  startLoading: PropTypes.func.isRequired,\n  finishLoading: PropTypes.func.isRequired,\n  hideLoadingButton: PropTypes.func.isRequired,\n  setPosts: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  loadingButton: PropTypes.bool.isRequired,\n  setVisiblePosts: PropTypes.func.isRequired,\n  allPosts: PropTypes.arrayOf(PropTypes.object).isRequired,\n  countPosts: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}